/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package day1puzzle1;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.List;
import java.util.stream.Collectors;

public class App {

    public int increases(Path file) {
        var depths = readDepths(file);
        return countDepthIncreases(depths);
    }

    private int countDepthIncreases(List<Integer> depths) {
        var prevValue = -1;
        var increases = 0;
        for (var depth : depths) {
            if (prevValue != -1 && depth > prevValue) {
                increases++;
            }
            prevValue = depth;
        }
        return increases;
    }

    private List<Integer> readDepths(Path file) {
        try {
            return Files.lines(file)
                    .map(Integer::valueOf)
                    .collect(Collectors.toList());
        } catch (IOException e) {
            e.printStackTrace();
            throw new IllegalStateException("Couldn't read the file", e);
        }
    }

    public static void main(String[] args) {
        var tmpDir = AppUtil.createTempDirectory();
        try {
            var inputFile = AppUtil.writeResourceToFile(tmpDir, "/input.txt");
            System.out.printf("Increases = %s%n", new App().increases(inputFile));
        } finally {
            AppUtil.deleteDirectoryAndChildren(tmpDir);
        }
    }

}
