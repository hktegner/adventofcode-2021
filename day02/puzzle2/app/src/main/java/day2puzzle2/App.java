/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package day2puzzle2;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.List;
import java.util.Objects;
import java.util.stream.Collectors;

public class App {

    public Position applyMoves(Position startPosition, Path movesFile) {
        var moves = readMoves(movesFile);
        return applyMoves(startPosition, moves);
    }

    private Position applyMoves(Position startPosition, List<Move> moves) {
        var position = startPosition.copy();
        for (var move : moves) {
            position = position.move(move);
        }
        return position;
    }

    private List<Move> readMoves(Path file) {
        try {
            return Files.lines(file)
                    .map(Move::toMove)
                    .filter(Objects::nonNull)
                    .collect(Collectors.toList());
        } catch (IOException e) {
            e.printStackTrace();
            throw new IllegalStateException("Couldn't read the file", e);
        }
    }

    public Position findFinalPosition(Position start, String resourceName) {
        var tmpDir = AppUtil.createTempDirectory();
        try {
            var inputFile = AppUtil.writeResourceToFile(tmpDir, resourceName);
            return applyMoves(start, inputFile);
        } finally {
            AppUtil.deleteDirectoryAndChildren(tmpDir);
        }
    }

    public static void main(String[] args) {
        Position finalPosition = new App().findFinalPosition(new Position(0, 0, 0), "/input.txt");
        System.out.printf("Final position = %s%n", finalPosition);
        System.out.printf("Position value = %d%n", finalPosition.getDepth() * finalPosition.getHorizontalPosition());
    }

}
